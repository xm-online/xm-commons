---
components:
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
      description: "Bad request. Request invalid by business rules"
    "401":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
      description: "Invalid access token"
    "403":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
      description: "Forbidden"
    "404":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
      description: "Not found"
    "500":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
      description: "Internal server error"
  schemas:
    FunctionName:
      $ref: "#/components/schemas/NameDefinition"
    NameDefinition:
      properties:
        name:
          type: "string"
      type: "object"
    RequestError:
      properties:
        error:
          type: "string"
        error_description:
          type: "string"
      type: "object"
    Structure:
      properties:
        name:
          type: "string"
        variable:
          type: "number"
      type: "object"
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes:
            openapi: "Default client scope"
          tokenUrl: "/uaa/oauth/token"
      type: "oauth2"
    oAuth2Password:
      flows:
        password:
          scopes:
            openapi: "Default client scope"
          tokenUrl: "/uaa/oauth/token"
      type: "oauth2"
info:
  title: "XM functions api"
  version: "0.0.1"
openapi: "3.0.3"
paths:
  /function/api/functions/NameFromKeyWrappedResultInReturn:
    delete:
      description: "NameFromKeyWrappedResultInReturn"
      operationId: "nameFromKeyWrappedResultInReturnDelete"
      parameters:
      - in: "query"
        name: "phone"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "email"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: "number"
                  value:
                    type: "string"
                type: "object"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "NameFromKeyWrappedResultInReturn"
      tags:
      - "test"
      - "external"
    post:
      description: "NameFromKeyWrappedResultInReturn"
      operationId: "nameFromKeyWrappedResultInReturnPostUrlencoded"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                email:
                  type: "string"
                phone:
                  type: "string"
              type: "object"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: "number"
                  value:
                    type: "string"
                type: "object"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "NameFromKeyWrappedResultInReturn"
      tags:
      - "test"
      - "external"
  /function/api/functions/check/different/key/with/same/path:
    delete:
      description: "check/path/TestNameDelete"
      operationId: "checkPathTestNameDelete"
      responses:
        "200":
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "check/path/TestNameDelete"
      tags:
      - "test"
      - "duplicatePath"
      - "duplicatePathExclude"
    put:
      description: "check/path/TestNamePut"
      operationId: "checkPathTestNamePut"
      responses:
        "200":
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "check/path/TestNamePut"
      tags:
      - "test"
      - "duplicatePath"
  /function/api/functions/folder/v1/TestName:
    get:
      description: "Test name function description"
      operationId: "folderV1TestNameGet"
      parameters:
      - in: "query"
        name: "name"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    additionalProperties: true
                    type: "object"
                  executeTime:
                    type: "integer"
                  id:
                    type: "integer"
                  rid:
                    type: "string"
                type: "object"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "Test Name"
      tags:
      - "external"
    post:
      description: "Test name function description"
      operationId: "folderV1TestNamePost"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: "string"
              type: "object"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  data:
                    additionalProperties: true
                    type: "object"
                  executeTime:
                    type: "integer"
                  id:
                    type: "integer"
                  rid:
                    type: "string"
                type: "object"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "Test Name"
      tags:
      - "external"
  /function/api/functions/folder/{variable}/StructureFunction:
    get:
      description: "StructureFunction"
      operationId: "structureFunctionGet"
      parameters:
      - in: "path"
        name: "variable"
        required: true
        schema:
          type: "number"
      - in: "query"
        name: "name"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    additionalProperties: true
                    type: "object"
                  executeTime:
                    type: "integer"
                  id:
                    type: "integer"
                  rid:
                    type: "string"
                type: "object"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "Structure"
      tags:
      - "external"
    post:
      description: "StructureFunction"
      operationId: "structureFunctionPost"
      parameters:
      - in: "path"
        name: "variable"
        required: true
        schema:
          type: "number"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Structure"
              properties:
                name:
                  type: "string"
              type: "object"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  data:
                    additionalProperties: true
                    type: "object"
                  executeTime:
                    type: "integer"
                  id:
                    type: "integer"
                  rid:
                    type: "string"
                type: "object"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "Structure"
      tags:
      - "external"
  /function/api/functions/relative/path/{pathVariable}/other/{otherPathVariable}/{notDefinedVariable}/etc:
    delete:
      description: "Description for test function generation"
      operationId: "testFunctionGenerationDelete"
      parameters:
      - in: "path"
        name: "pathVariable"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "otherPathVariable"
        required: true
        schema:
          type: "number"
      - in: "path"
        name: "notDefinedVariable"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "functionName"
        required: true
        schema:
          $ref: "#/components/schemas/FunctionName"
      - in: "query"
        name: "functionName2"
        required: true
        schema:
          $ref: "#/components/schemas/FunctionName"
      - in: "query"
        name: "firstName"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "lastName"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      count:
                        type: "number"
                      nameHolder:
                        $ref: "#/components/schemas/NameDefinition"
                      value:
                        type: "string"
                    type: "object"
                  executeTime:
                    type: "integer"
                  id:
                    type: "integer"
                  rid:
                    type: "string"
                type: "object"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "TestFunctionGeneration name"
      tags:
      - "test"
      - "internal"
    get:
      description: "Description for test function generation"
      operationId: "testFunctionGenerationGet"
      parameters:
      - in: "path"
        name: "pathVariable"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "otherPathVariable"
        required: true
        schema:
          type: "number"
      - in: "path"
        name: "notDefinedVariable"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "functionName"
        required: true
        schema:
          $ref: "#/components/schemas/FunctionName"
      - in: "query"
        name: "functionName2"
        required: true
        schema:
          $ref: "#/components/schemas/FunctionName"
      - in: "query"
        name: "firstName"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "lastName"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      count:
                        type: "number"
                      nameHolder:
                        $ref: "#/components/schemas/NameDefinition"
                      value:
                        type: "string"
                    type: "object"
                  executeTime:
                    type: "integer"
                  id:
                    type: "integer"
                  rid:
                    type: "string"
                type: "object"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "TestFunctionGeneration name"
      tags:
      - "test"
      - "internal"
    post:
      description: "Description for test function generation"
      operationId: "testFunctionGenerationPost"
      parameters:
      - in: "path"
        name: "pathVariable"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "otherPathVariable"
        required: true
        schema:
          type: "number"
      - in: "path"
        name: "notDefinedVariable"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                firstName:
                  type: "string"
                functionName:
                  $ref: "#/components/schemas/FunctionName"
                functionName2:
                  $ref: "#/components/schemas/FunctionName"
                lastName:
                  type: "string"
              type: "object"
          application/x-www-form-urlencoded:
            schema:
              properties:
                firstName:
                  type: "string"
                functionName:
                  $ref: "#/components/schemas/FunctionName"
                functionName2:
                  $ref: "#/components/schemas/FunctionName"
                lastName:
                  type: "string"
              type: "object"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      count:
                        type: "number"
                      nameHolder:
                        $ref: "#/components/schemas/NameDefinition"
                      value:
                        type: "string"
                    type: "object"
                  executeTime:
                    type: "integer"
                  id:
                    type: "integer"
                  rid:
                    type: "string"
                type: "object"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "TestFunctionGeneration name"
      tags:
      - "test"
      - "internal"
    put:
      description: "Description for test function generation"
      operationId: "testFunctionGenerationPut"
      parameters:
      - in: "path"
        name: "pathVariable"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "otherPathVariable"
        required: true
        schema:
          type: "number"
      - in: "path"
        name: "notDefinedVariable"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                firstName:
                  type: "string"
                functionName:
                  $ref: "#/components/schemas/FunctionName"
                functionName2:
                  $ref: "#/components/schemas/FunctionName"
                lastName:
                  type: "string"
              type: "object"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      count:
                        type: "number"
                      nameHolder:
                        $ref: "#/components/schemas/NameDefinition"
                      value:
                        type: "string"
                    type: "object"
                  executeTime:
                    type: "integer"
                  id:
                    type: "integer"
                  rid:
                    type: "string"
                type: "object"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "TestFunctionGeneration name"
      tags:
      - "test"
      - "internal"
security:
- {}
- {}
servers:
- url: "https://xm.domain.com:8080"

