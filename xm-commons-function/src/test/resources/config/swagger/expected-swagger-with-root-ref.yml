---
components:
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
      description: "Bad request. Request invalid by business rules"
    "401":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
      description: "Invalid access token"
    "403":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
      description: "Forbidden"
    "404":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
      description: "Not found"
    "500":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
      description: "Internal server error"
  schemas:
    Pair:
      properties:
        code:
          type: "string"
          x-label:
            x-en: "Code"
        value:
          type: "string"
          x-label:
            x-en: "Value"
      type: "object"
      x-$schema: "http://json-schema.org/draft-07/schema#"
    RequestError:
      properties:
        error:
          type: "string"
        error_description:
          type: "string"
      type: "object"
    UserContact:
      properties:
        email:
          type: "string"
          x-label:
            x-en: "Email"
        msisdn:
          type: "string"
          x-label:
            x-en: "Mobile Number"
      type: "object"
      x-$schema: "http://json-schema.org/draft-07/schema#"
    UserInfo:
      allOf:
      - $ref: "#/components/schemas/UserContact"
      - properties:
          doNotDisturb:
            type: "boolean"
            x-label:
              x-en: "Do not disturb"
          name:
            type: "string"
            x-label:
              x-en: "Name"
          package:
            items:
              $ref: "#/components/schemas/Pair"
              x-label:
                x-en: "Package"
            type: "array"
            x-label:
              x-en: "Package"
        type: "object"
      x-$schema: "http://json-schema.org/draft-07/schema#"
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes:
            openapi: "Default client scope"
          tokenUrl: "/uaa/oauth/token"
      type: "oauth2"
    oAuth2Password:
      flows:
        password:
          scopes:
            openapi: "Default client scope"
          tokenUrl: "/uaa/oauth/token"
      type: "oauth2"
info:
  title: "XM functions api"
  version: "0.0.1"
openapi: "3.0.3"
paths:
  /function/api/functions/user/GET-INFO:
    get:
      description: "user/GET-INFO"
      operationId: "userGetInfoget"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "user/GET-INFO"
    post:
      description: "user/GET-INFO"
      operationId: "userGetInfopost"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
          description: "Successful operation"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
      summary: "user/GET-INFO"
security:
- {}
- {}
servers:
- url: "https://xm.domain.com:8080"
