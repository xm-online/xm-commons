---
flows:
- key: "my-flow"
  description: "Init description"
  steps:
  - key: "step1"
    typeKey: "actionkey"
    parameters:
      query: "select * from orders"
    type: "ACTION"
    next:
    - "step2"
  - key: "step2"
    typeKey: "actionkey"
    parameters:
      query: "select * from users"
    snippets:
      mapping:
        content: "return context.get('orders').map(order => { return { id: order.id,\
          \ name: order.name }; })"
        extension: "js"
      precheck:
        content: "if (context.get('orders').length > 0) { return true; } else { return\
          \ false; }"
        extension: "js"
    type: "ACTION"
    next:
    - "step3"
  - key: "step3"
    typeKey: "actionkey"
    parameters:
      query: "select * from votes"
    snippets:
      postcheck:
        content: "if (context.get('votes').length > 0) { return true; } else { return\
          \ false; }"
        extension: "js"
      mapping:
        content: "return context.get('users').map(user => { return { id: user.id,\
          \ name: user.name }; })"
        extension: "js"
      precheck:
        content: "if (context.get('users').length > 0) { return true; } else { return\
          \ false; }"
        extension: "js"
    type: "ACTION"
  trigger:
    typeKey: "httpkey"
    parameters:
      method: "GET"
      url: "/api/orders"
