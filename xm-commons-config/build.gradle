buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath fileTree(dir: '..\\libs', includes: ['*.jar'])
    }
}

apply plugin: 'propdeps'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${versions.springBoot}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${versions.springCloud}"
    }
}

dependencies {

    compile project(':xm-commons-logging')
    compile project(':xm-commons-tenant')

    optional("org.springframework.boot:spring-boot-configuration-processor") {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }

    compile "commons-collections:commons-collections:${versions.commonsCollections}"
    compile 'org.springframework.cloud:spring-cloud-commons'
    compile 'org.springframework.cloud:spring-cloud-netflix-core'
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile 'org.springframework.kafka:spring-kafka'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-json-org'

    compile "org.apache.commons:commons-lang3:${versions.commonsLang3}"
    compile "org.springframework.security.oauth:spring-security-oauth2:${versions.springSecurityOAuth2}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"

    testCompile 'junit:junit'
    testCompile 'org.assertj:assertj-core'
    testCompile 'org.mockito:mockito-core'
}

compileJava.dependsOn(processResources)
